@page "/sitelist"
@using cloudscribe.Core.Models
@using GraphQL.Common.Request;
@using System.Text
@inject HttpClient Http

@if (model == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Aliasid</th>
                <th>Folder</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var site in model.Data.SiteList)
            {
                <tr>
                    <td>@site.Id</td>
                    <td>@site.SiteName</td>
                    <td>@site.AliasId</td>
                    <td>@site.SiteFolderName</td>
                </tr>
            }
        </tbody>
    </table>
}

@functions {

    SiteListModel model = null;
    string responseFromG = "";

    protected override async Task OnInitAsync()
    {
        var request = new GraphQLRequest
        {
            Query = @"
                    {
                      siteList {
                        id,
                        aliasId,
                        siteName,
                        siteFolderName
                      }
                    }"
        };

        var query = Json.Serialize(request);

        var content = new StringContent(query, Encoding.UTF8, "application/json");
        var response = await Http.PostAsync("https://localhost:44396/graphql", content);
        response.EnsureSuccessStatusCode();
        responseFromG = await response.Content.ReadAsStringAsync();

        model = Json.Deserialize<SiteListModel>(responseFromG);
       
    }

    // these models are only needed because the response format is:
    //{"data":{"siteList":[{"id":"5961f387-accd-49dc-b962-44029d0803ae","aliasId":"s1","siteName":"GraphQL Demo","siteFolderName":null}]}}
    // and this provides something easy to deserialize from the response
    class SiteListModel
    {
        public DataResult Data { get; set; }

        public class DataResult
        {
            public List<SiteInfo> SiteList { get; set; }
        }
    }




}
