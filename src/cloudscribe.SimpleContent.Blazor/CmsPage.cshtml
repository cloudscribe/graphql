@inject HttpClient Http

@if (model == null && errorModel == null)
{
    <p><em>Loading...</em></p>
}
else if (model != null)
{
    <h1>@model.Data.GetPageFromSlug.Title</h1>
    <div>
        @((MarkupString)model.Data.GetPageFromSlug.Content)
    </div>
    
}
<GraphQLErrors ErrorModel="@errorModel" Heading="Oops, something went wrong" />


@functions {

[Parameter]
private string PageSlug { get; set; } = "home";

PageModel model = null;
ErrorModel errorModel = null;

protected override async Task OnInitAsync()
{
    var query = new GraphQLRequest
    {
        Query = @"
        query MyQuery($projectId: String!, $slug: String!){
            getPageFromSlug (projectId: $projectId, slug: $slug) {
                id,
                projectId,
                title,
                content,
                metaDescription,
                author,
                pubDate
              }
        }",
        Variables = new
        {
            projectId = await AppSettings.Get("siteId"),
            slug = PageSlug
        }
    };

    if (!string.IsNullOrWhiteSpace(PageSlug))
    {
        var endPoint = await AppSettings.Get("graphqlApiUri");

        var result = await Http.SendQuery<PageModel>(endPoint, query);
        if (result.SuccessResult != null)
        {
            model = result.SuccessResult;
        }
        else if (result.Errors != null)
        {
            errorModel = result.Errors;
        }
    }
}

class PageModel
{
    public DataResult Data { get; set; }

    public class DataResult
    {
        public Page GetPageFromSlug { get; set; }
    }
}

}